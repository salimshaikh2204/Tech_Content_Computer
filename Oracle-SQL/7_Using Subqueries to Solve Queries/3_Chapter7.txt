--in and not in  when there are null values

--when you want to retrive the employees who have no manager , we use is null
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

--you can not use =null

SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = NULL; --this is not valid  in select, use is null / is not null

--if the subquery return null with operator IN, this is ok
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID in ( 100, 101, NULL);

--if the subquery return null with operator NOT IN , then no revords will be retrive
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID not in ( 100, 101,null);

----   IN is Equivalent to  =any
--so if the subquery set contains one null value, then no issue 
SELECT EMPLOYEE_ID, first_name,last_name, salary
FROM EMPLOYEES
WHERE EMPLOYEE_ID in (SELECT MANAGER_ID FROM  EMPLOYEES );

----NOT in  IS  Equivalent  TO   <>all
--so if  the subquery set contains one null value, then the query will retrieve no records
SELECT EMPLOYEE_ID, first_name,last_name, salary
FROM EMPLOYEES
WHERE EMPLOYEE_ID not in (SELECT MANAGER_ID FROM  EMPLOYEES );


---7 EXISTS / NOT EXISTS

--retrieve all the departments info that have employees 

SELECT * FROM
DEPARTMENTS DEPT
WHERE DEPARTMENT_ID in  (SELECT DEPARTMENT_ID FROM EMPLOYEES EMP );

SELECT * FROM
DEPARTMENTS DEPT
WHERE EXISTS (SELECT DEPARTMENT_ID FROM EMPLOYEES EMP WHERE EMP.DEPARTMENT_ID=DEPT.DEPARTMENT_ID);

--retrieve all the departments info that have no employees
SELECT * FROM
DEPARTMENTS DEPT
WHERE not EXISTS (SELECT DEPARTMENT_ID FROM EMPLOYEES EMP WHERE EMP.DEPARTMENT_ID=DEPT.DEPARTMENT_ID);

---------------------------------









